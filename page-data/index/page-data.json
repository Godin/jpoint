{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/","matchPath":"/*","result":{"data":{"deck":{"id":"1b475156-9648-58fd-8779-630cf6719214","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = vsDark;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Code Coverage in JVM\"), mdx(\"h2\", null, \"Workshop\"), mdx(\"h3\", null, \"#Heisenbug \", \"\\xA0\", \" \", \"\\xA0\", \" \", \"\\xA0\", \" #JaCoCo\"), mdx(\"h5\", null, \"\\uD83D\\uDC4B Evgeny Mandrikov \", \"\\xA0\", \" \", \"\\xA0\", \" \", \"\\xA0\", \" \", \"\\xA0\", \" \\uD83D\\uDC26 @\", \"_\", \"Godin\", \"_\"), mdx(\"hr\", null), mdx(\"center\", null, mdx(\"img\", {\n    style: {\n      width: '120%'\n    },\n    src: sonarsource_image\n  })), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"/* TODO Don't forget to add huge disclaimer\\n * that all opinions hereinbelow are my own\\n * and not my employer's.\\n *\\n * They can only dream that they own them.\\n */\\n\")), mdx(\"hr\", null), mdx(\"h1\", null, \"JaCoCo\"), mdx(\"h2\", null, \"Tested on 11 and \\xBD JDKs\"), mdx(\"h3\", null, \"from version 5 up to 16 EA\"), mdx(\"hr\", null), mdx(\"img\", {\n    style: {\n      width: '60%'\n    },\n    src: jacoco_bug_image\n  }), mdx(\"hr\", null), mdx(\"img\", {\n    style: {\n      width: '80%'\n    },\n    src: bugs_image\n  }), mdx(\"hr\", null), mdx(\"h2\", null, \"Today\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Agent and Command Line Interface\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Build Systems (Maven, Gradle)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Languages (Java, Kotlin, Groovy)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"IDEs (IntelliJ IDEA, Eclipse)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"APIs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Continuous integration and inspection\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Ready ?\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git clone https://github.com/Godin/heisenbug2020.git\\n\")), mdx(\"hr\", null), mdx(\"hr\", null), mdx(Image, {\n    src: end_image,\n    mdxType: \"Image\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/*","isCreatedByStatefulCreatePages":false,"id":"1b475156-9648-58fd-8779-630cf6719214","slug":"","title":"Code Coverage in JVM"}}}